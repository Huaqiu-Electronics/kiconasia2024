# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  1h;
    ~image/                    2d;
    ~font/                     max;
    #css and js are fingerprinted by hugo pipes
    text/css                   max;
    application/javascript     max;
    application/json           1d;
}

server {
    listen       8081 default_server;
    server_name  _;
    server_tokens off;

    # avoid port changing between container and external ports on redirects
    # there is also port_in_redirect but it things trickier in development when you aren't binding to port 80 :/
    absolute_redirect off;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    etag on;

    gzip on;
    gzip_disable        "msie6";
    gzip_vary           on;

    gzip_comp_level 4;
    gzip_min_length 1100;
    gzip_buffers 64 8k;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;


    expires $expires;

    # Apply CSP policy to all requests
    # Fonts
    set $csp_font "font-src 'self'";
    # Allow google fonts
    set $csp_font "${csp_font} fonts.gstatic.com";
    # Allow our own domains
    set $csp_font "${csp_font} *.kicon.kicad.org";

    set $csp_style "style-src 'self'";
    # Allow the numerous style="" attributes scattered everywhere :/
    set $csp_style "${csp_style} 'unsafe-inline'";
    # Allow our own domains
    set $csp_style "${csp_style} *.kicon.kicad.org";
    # Allow google fonts
    set $csp_style "${csp_style} fonts.googleapis.com";
    # unpkg cdn
    set $csp_style "${csp_style} unpkg.com";

    set $csp_media "media-src 'self'";
    # Allow youtube embeds
    set $csp_media "${csp_media} *.youtube.com";
    set $csp_media "${csp_media} player.vimeo.com";
    # Allow our own domains
    set $csp_media "${csp_media} *.kicon.kicad.org";

    set $csp_object "object-src 'self'";
    # Allow youtube embeds
    set $csp_object "${csp_object} *.youtube.com";
    # Allow our own domains explicitly
    set $csp_object "${csp_object} *.kicon.kicad.org";

    set $csp_script "script-src 'self'";
    # Allow our webp inline script
    set $csp_script "${csp_script} 'unsafe-inline'";
    # Allow our own domains
    set $csp_script "${csp_script} *.kicon.kicad.org";
    # Cloudflare
    set $csp_script "${csp_script} static.cloudflareinsights.com";
    # Cloudflare
    set $csp_script "${csp_script} ajax.cloudflare.com";
    set $csp_script "${csp_script} cdnjs.cloudflare.com";
    # unpkg cdn
    set $csp_script "${csp_script} unpkg.com";

    # Allow all frames that we set
    set $csp_frame "frame-src 'self'";
    # Allow our own domains
    set $csp_frame "${csp_frame} *.kicon.kicad.org";
    # Allow youtube embeds
    set $csp_frame "${csp_frame} *.youtube.com";
    set $csp_frame "${csp_frame} mailto:";

    # Allow all external images
    set $csp_img "img-src *";
    # Allow youtube embeds
    set $csp_img "${csp_img} data:";

    set $csp_default "default-src 'self'";
    # Allow our own domains
    set $csp_default "${csp_default} *.kicon.kicad.org";

    add_header Content-Security-Policy "${csp_default};${csp_img};${csp_font};${csp_style};${csp_media};${csp_object};${csp_script};${csp_frame}";

    # Route for openshift/kubernetes/docker healthchecks
    location /healthz {
        access_log off;
        default_type text/plain;
        return 200 "healthy\n";
    }

    # Index
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # location ^~ /europe2024 {
    #     rewrite ^/europe2024/?(.*)$ /$1 break;
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    error_page 404 /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
        internal;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
